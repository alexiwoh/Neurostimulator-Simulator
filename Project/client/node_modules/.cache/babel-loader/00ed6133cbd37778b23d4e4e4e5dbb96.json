{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderiwoh/Programming/GitHub/Neurostimulator-Simulator/Project/client/src/App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./Componenets.css\";\nimport { AppComponents, Page1, Page2 } from \"./Componenets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEBUG = false;\nfunction App() {\n  _s();\n  const [data, setData] = React.useState(null);\n  const [jsx, setJSX] = React.useState( /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 41\n  }, this));\n  React.useEffect(() => {\n    fetch(\"/api\").then(res => {\n      console.log(res);\n      return res.json();\n    }).then(data => {\n      setData(data.message);\n      let j = [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All device data (for testing purposes...)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 19\n      }, this)];\n      j = j.concat(data.message.split(\"\\n\").map(s => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: s\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 56\n      }, this)));\n      setJSX(j);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AppComponents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dataAsText\",\n      children: DEBUG ? jsx : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"7fOMo3T/zitDi3c4zm+6rREhCgc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","AppComponents","Page1","Page2","jsxDEV","_jsxDEV","Fragment","_Fragment","DEBUG","App","_s","data","setData","useState","jsx","setJSX","fileName","_jsxFileName","lineNumber","columnNumber","useEffect","fetch","then","res","console","log","json","message","j","children","concat","split","map","s","id","_c","$RefreshReg$"],"sources":["/Users/alexanderiwoh/Programming/GitHub/Neurostimulator-Simulator/Project/client/src/App.js"],"sourcesContent":["/* eslint-disable */ \r\nimport React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\"; \r\nimport \"./Componenets.css\";\r\nimport {AppComponents, Page1, Page2 } from \"./Componenets\"\r\nconst DEBUG = false;\r\n\r\nfunction App() {\r\n \r\n  const [data, setData] = React.useState(null);\r\n  const [jsx, setJSX] = React.useState((<p></p>));\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"/api\")\r\n      .then((res) => {\r\n        console.log(res)\r\n        return res.json()\r\n      })\r\n      .then((data) => {\r\n        setData(data.message);\r\n        let j = [(<h1>All device data (for testing purposes...)</h1>)];\r\n        j = j.concat(data.message.split(\"\\n\").map(s => <p>{s}</p>));\r\n        setJSX(j);\r\n      });   \r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AppComponents />\r\n      </div>  \r\n      <div id=\"dataAsText\">  \r\n        {(DEBUG) ? jsx : <></>}\r\n      </div>  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAO,mBAAmB;AAC1B,SAAQC,aAAa,EAAEC,KAAK,EAAEC,KAAK,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1D,MAAMC,KAAK,GAAG,KAAK;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGhB,KAAK,CAACc,QAAQ,eAAER,OAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAE,CAAC;EAE/CpB,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpBC,KAAK,CAAC,MAAM,CAAC,CACVC,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,OAAOA,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEX,IAAI,IAAK;MACdC,OAAO,CAACD,IAAI,CAACgB,OAAO,CAAC;MACrB,IAAIC,CAAC,GAAG,cAAEvB,OAAA;QAAAwB,QAAA,EAAI;MAAyC;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,CAAE;MAC9DS,CAAC,GAAGA,CAAC,CAACE,MAAM,CAACnB,IAAI,CAACgB,OAAO,CAACI,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,CAAC,iBAAI5B,OAAA;QAAAwB,QAAA,EAAII;MAAC;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,CAAC,CAAC;MAC3DJ,MAAM,CAACa,CAAC,CAAC;IACX,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,eACExB,OAAA,CAACJ,aAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACNd,OAAA;MAAK6B,EAAE,EAAC,YAAY;MAAAL,QAAA,EAChBrB,KAAK,GAAIM,GAAG,gBAAGT,OAAA,CAAAE,SAAA,mBAAI;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA,eACN,CAAC;AAEP;AAACT,EAAA,CA7BQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}