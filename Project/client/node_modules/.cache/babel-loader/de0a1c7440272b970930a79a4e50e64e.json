{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexi\\\\Documents\\\\Carleton\\\\BCS\\\\Winter 2022\\\\COMP 4905 (Honors Project)\\\\Neurostimulator-Simulator\\\\Project\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const [jsx, setJSX] = React.useState( /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 41\n  }, this));\n  const [refresh, setRefresh] = React.useState(false); //setInterval(()=>{setRefresh(!refresh)}, 60000);\n\n  /*React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => setData(data.message));\n  }, []);*/\n\n  React.useEffect(() => {\n    fetch(\"/api\").then(res => res.json()).then(data => {\n      setData(data.message);\n      let j = [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this)];\n      j = j.concat(data.message.split(\"\\n\").map(s => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: s\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 56\n      }, this)));\n      setJSX(j);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: !data ? \"Loading!...\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), jsx]\n  }, void 0, true);\n  /*\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>{!data ? \"Loading...\" : data}</p>\n      </header>\n    </div>\n  );\n  *\n   /*\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n  */\n}\n\n_s(App, \"VaTeUbQYfE2G4ImBdrYkPsJMkeY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/alexi/Documents/Carleton/BCS/Winter 2022/COMP 4905 (Honors Project)/Neurostimulator-Simulator/Project/client/src/App.js"],"names":["React","logo","App","data","setData","useState","jsx","setJSX","refresh","setRefresh","useEffect","fetch","then","res","json","message","j","concat","split","map","s"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,KAAK,CAACK,QAAN,eAAgB;AAAA;AAAA;AAAA;AAAA,UAAhB,CAAtB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACK,QAAN,CAAe,KAAf,CAA9B,CAJa,CAKb;;AAEA;AACF;AACA;AACA;AACA;;AAEEL,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,MAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAEST,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAI,CAACY,OAAN,CAAP;AACA,UAAIC,CAAC,GAAG,cAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAF,CAAR;AACAA,MAAAA,CAAC,GAAGA,CAAC,CAACC,MAAF,CAASd,IAAI,CAACY,OAAL,CAAaG,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,CAA6BC,CAAC,iBAAI;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAlC,CAAT,CAAJ;AACAb,MAAAA,MAAM,CAACS,CAAD,CAAN;AACD,KAPH;AAQD,GATD;AAWA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAA,kBAAI,CAACb,IAAD,GAAQ,aAAR,GAAwB;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIGG,GAJH;AAAA,kBADF;AASA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;;GAhEQJ,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\"; \n\n\nfunction App() {\n \n  const [data, setData] = React.useState(null);\n  const [jsx, setJSX] = React.useState((<p></p>));\n  const [refresh, setRefresh] = React.useState(false);\n  //setInterval(()=>{setRefresh(!refresh)}, 60000);\n\n  /*React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => setData(data.message));\n  }, []);*/\n\n  React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => {\n        setData(data.message);\n        let j = [(<h1>Project</h1>)];\n        j = j.concat(data.message.split(\"\\n\").map(s => <p>{s}</p>));\n        setJSX(j);\n      });\n  });\n\n  return (\n    <>\n      <div className=\"App\">\n        <p>{!data ? \"Loading!...\" : \"\"}</p>\n      </div>  \n      {jsx}\n    </>\n  );\n\n  /*\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>{!data ? \"Loading...\" : data}</p>\n      </header>\n    </div>\n  );\n  *\n\n  /*\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n  */\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}